#BlueJ class context
comment0.target=canHurtCharacter
comment0.text=\r\n\ Write\ a\ description\ of\ class\ AI\ here.\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=name\ anySpeed\ chaseSpeed\ viewDistance\ attackDelayCounter\ health\ damage\ flying
comment1.target=canHurtCharacter(java.lang.String,\ int,\ int,\ int,\ int,\ int,\ int,\ boolean)
comment1.text=\r\n\ Constructor\ for\ canHurtCharacter\ class\r\n\ \r\n\ @name\:\ name\ of\ the\ the\ character,\ leave\ ""\ if\ do\ not\ know\r\n\ @anySpeed\:\ regular\ speed\ of\ the\ AI\r\n\ @chaseSpeed\:\ increment\ of\ speed\ when\ the\ AI\ is\ chasing\ the\ character\r\n\ @viewDistance\:\ the\ AI's\ view\ range\r\n\ @attackDelayCounter\:\ how\ long\ the\ AI\ can\ re-attack\ and\ damage\ the\ player\r\n\ @health\:\ amount\ of\ health\r\n\ @damage\:\ how\ much\ damage\ the\ AI\ deals\ (5\ is\ 1/2\ heart)\r\n\ @flying\:\ Flying\ type\ or\ ground\ type\r\n
comment10.params=
comment10.target=void\ touchPlayer()
comment10.text=\r\n\ returns\ if\ AI\ is\ touching\ player\ and\ damage\ the\ player\r\n
comment11.params=
comment11.target=boolean\ getAttack()
comment11.text=\r\n\ returns\ attacking\ (attacking\ or\ not)\r\n
comment12.params=
comment12.target=int\ getAttackDelay()
comment12.text=\r\n\ returns\ attackDelay\ (how\ long\ before\ the\ AI\ can\ attack\ again)\r\n
comment13.params=
comment13.target=boolean\ seePlayer()
comment13.text=\r\n\ returns\ if\ seeing\ the\ player\r\n
comment14.params=amount
comment14.target=void\ minusHealth(int)
comment14.text=\r\n\ reduces\ health\ when\ getting\ acctacked\ by\ the\ player\r\n\ @amount\ is\ the\ amount\ of\ damage\ given\ to\ the\ character\r\n
comment15.params=counter
comment15.target=void\ stunt(int)
comment15.text=\r\n\ stunts\ the\ AI\ when\ it\ gets\ hit\ bit\ weapons.class\r\n\ @counter\:\ how\ long\ it\ will\ get\ stunt\r\n
comment16.params=
comment16.target=void\ die()
comment16.text=\r\n\ removes\ this\ from\ the\ world\ when\ health\ is\ \=\ 0\r\n\ @chancesOfHealth\:\ chances\ that\ the\ death\ of\ AI\ will\ drop\ a\ health\ pack\r\n
comment17.params=
comment17.target=int\ getHealth()
comment17.text=\r\n\ returns\ health\r\n
comment18.params=clss
comment18.target=boolean\ touch(java.lang.Class)
comment18.text=This\ method\ is\ a\ pixel\ perfect\ collision\ detection.\ Return,\ if\ it\ intersects\ an\ actor\ of\ the\ given\ class
comment19.params=a_big
comment19.target=boolean\ touch(greenfoot.Actor)
comment19.text=This\ method\ is\ a\ pixel\ perfect\ collision\ detection.\ Returns\ true,\ if\ the\ object\ touchs\ the\ given\ Actor
comment2.params=
comment2.target=void\ move()
comment2.text=\r\n\ moves\ character\ base\ on\ situations\r\n\ moves\ randomly\ when\ not\ seeing\ mainCharacter\r\n\ moves\ toward\ the\ mainCharater\ when\ in\ range\r\n\ \r\n\ @stuntCounter\:\ stunts\ the\ AI\ when\ it\ is\ attacked\r\n
comment3.params=
comment3.target=void\ chasePlayer()
comment3.text=\r\n\ chases\ the\ player\ when\ in\ range\r\n
comment4.params=
comment4.target=boolean\ lookForPlayer()
comment4.text=\r\n\ return\ if\ the\ mainCharacter\ is\ in\ range\r\n
comment5.params=
comment5.target=void\ moveRandomly()
comment5.text=\r\n\ move\ randomly\ when\ the\ mainCharacter\ is\ not\ in\ range\r\n
comment6.params=newViewDistance
comment6.target=void\ setViewDistance(int)
comment6.text=\r\n\ set\ the\ AI's\ current\ viewDistance\ to\ other\ variables\r\n
comment7.params=
comment7.target=void\ hittingObjects()
comment7.text=\r\n\ push\ back\ the\ character\ when\ it\ touches\ an\ object\r\n
comment8.params=
comment8.target=void\ checkDirection()
comment8.text=\r\n\ check\ which\ direction\ is\ the\ AI\ touching\ the\ object\r\n\ this\ will\ be\ implemented\ in\ the\ hittingObject()\ method\r\n
comment9.params=
comment9.target=void\ attackPlayer()
comment9.text=\r\n\ starts\ attacking\ the\ mainCharacter\ when\ they\ make\ contact\r\n
numComments=20
